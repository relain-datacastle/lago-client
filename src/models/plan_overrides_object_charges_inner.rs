/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlanOverridesObjectChargesInner {
    /// Unique identifier of the charge created by Lago.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<uuid::Uuid>,
    /// Unique identifier of the billable metric created by Lago.
    #[serde(rename = "billable_metric_id", skip_serializing_if = "Option::is_none")]
    pub billable_metric_id: Option<uuid::Uuid>,
    /// Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name.
    #[serde(rename = "invoice_display_name", skip_serializing_if = "Option::is_none")]
    pub invoice_display_name: Option<String>,
    /// The minimum spending amount required for the charge, measured in cents and excluding any applicable taxes. It indicates the minimum amount that needs to be charged for each billing period.
    #[serde(rename = "min_amount_cents", skip_serializing_if = "Option::is_none")]
    pub min_amount_cents: Option<i32>,
    /// List of all thresholds utilized for calculating the charge.
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<Box<models::ChargeProperties>>,
    /// List of filters used to apply differentiated pricing based on additional event properties.
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<models::ChargeFilterInput>>,
    /// List of unique code used to identify the taxes.
    #[serde(rename = "tax_codes", skip_serializing_if = "Option::is_none")]
    pub tax_codes: Option<Vec<String>>,
}

impl PlanOverridesObjectChargesInner {
    pub fn new() -> PlanOverridesObjectChargesInner {
        PlanOverridesObjectChargesInner {
            id: None,
            billable_metric_id: None,
            invoice_display_name: None,
            min_amount_cents: None,
            properties: None,
            filters: None,
            tax_codes: None,
        }
    }
}

