/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreditNoteEstimatedEstimatedCreditNote {
    /// Unique identifier assigned to the invoice that the credit note belongs to
    #[serde(rename = "lago_invoice_id")]
    pub lago_invoice_id: uuid::Uuid,
    /// The invoice unique number, related to the credit note.
    #[serde(rename = "invoice_number")]
    pub invoice_number: String,
    /// The currency of the credit note.
    #[serde(rename = "currency")]
    pub currency: models::Currency,
    /// The tax amount of the credit note, expressed in cents.
    #[serde(rename = "taxes_amount_cents")]
    pub taxes_amount_cents: i32,
    /// The tax rate associated with this specific credit note.
    #[serde(rename = "taxes_rate")]
    pub taxes_rate: f64,
    /// The subtotal of the credit note excluding any applicable taxes, expressed in cents.
    #[serde(rename = "sub_total_excluding_taxes_amount_cents")]
    pub sub_total_excluding_taxes_amount_cents: i32,
    /// The credited amount of the credit note, expressed in cents.
    #[serde(rename = "max_creditable_amount_cents")]
    pub max_creditable_amount_cents: i32,
    /// The refunded amount of the credit note, expressed in cents.
    #[serde(rename = "max_refundable_amount_cents")]
    pub max_refundable_amount_cents: i32,
    /// The pro-rated amount of the coupons applied to the source invoice.
    #[serde(rename = "coupons_adjustment_amount_cents")]
    pub coupons_adjustment_amount_cents: i32,
    /// Array of credit note's items.
    #[serde(rename = "items")]
    pub items: Vec<models::CreditNoteEstimatedEstimatedCreditNoteItemsInner>,
    #[serde(rename = "applied_taxes", skip_serializing_if = "Option::is_none")]
    pub applied_taxes: Option<Vec<models::CreditNoteEstimatedEstimatedCreditNoteAppliedTaxesInner>>,
}

impl CreditNoteEstimatedEstimatedCreditNote {
    pub fn new(lago_invoice_id: uuid::Uuid, invoice_number: String, currency: models::Currency, taxes_amount_cents: i32, taxes_rate: f64, sub_total_excluding_taxes_amount_cents: i32, max_creditable_amount_cents: i32, max_refundable_amount_cents: i32, coupons_adjustment_amount_cents: i32, items: Vec<models::CreditNoteEstimatedEstimatedCreditNoteItemsInner>) -> CreditNoteEstimatedEstimatedCreditNote {
        CreditNoteEstimatedEstimatedCreditNote {
            lago_invoice_id,
            invoice_number,
            currency,
            taxes_amount_cents,
            taxes_rate,
            sub_total_excluding_taxes_amount_cents,
            max_creditable_amount_cents,
            max_refundable_amount_cents,
            coupons_adjustment_amount_cents,
            items,
            applied_taxes: None,
        }
    }
}

