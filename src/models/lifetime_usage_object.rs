/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LifetimeUsageObject {
    /// Unique identifier assigned to the lifetime usage record within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the lifetime usage record within the Lago system
    #[serde(rename = "lago_id")]
    pub lago_id: uuid::Uuid,
    /// Unique identifier assigned to the subscription record within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the subscription record within the Lago system
    #[serde(rename = "lago_subscription_id")]
    pub lago_subscription_id: uuid::Uuid,
    /// The subscription external unique identifier (provided by your own application).
    #[serde(rename = "external_subscription_id")]
    pub external_subscription_id: String,
    /// The historical usage amount in cents for the subscription (provided by your own application).
    #[serde(rename = "external_historical_usage_amount_cents")]
    pub external_historical_usage_amount_cents: i32,
    /// The total invoiced usage amount in cents for the subscription.
    #[serde(rename = "invoiced_usage_amount_cents")]
    pub invoiced_usage_amount_cents: i32,
    /// The current usage amount in cents for the subscription on the current billing period.
    #[serde(rename = "current_usage_amount_cents")]
    pub current_usage_amount_cents: i32,
    /// The recording start date and time of the subscription lifetime usage. The date and time must be in ISO 8601 format.
    #[serde(rename = "from_datetime")]
    pub from_datetime: String,
    /// The recording end date and time of the subscription lifetime usage. The date and time must be in ISO 8601 format.
    #[serde(rename = "to_datetime")]
    pub to_datetime: String,
    /// Array of usage thresholds attached to the subscription's plan.
    #[serde(rename = "usage_thresholds", skip_serializing_if = "Option::is_none")]
    pub usage_thresholds: Option<Vec<models::LifetimeUsageThresholdObject>>,
}

impl LifetimeUsageObject {
    pub fn new(lago_id: uuid::Uuid, lago_subscription_id: uuid::Uuid, external_subscription_id: String, external_historical_usage_amount_cents: i32, invoiced_usage_amount_cents: i32, current_usage_amount_cents: i32, from_datetime: String, to_datetime: String) -> LifetimeUsageObject {
        LifetimeUsageObject {
            lago_id,
            lago_subscription_id,
            external_subscription_id,
            external_historical_usage_amount_cents,
            invoiced_usage_amount_cents,
            current_usage_amount_cents,
            from_datetime,
            to_datetime,
            usage_thresholds: None,
        }
    }
}

