/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FeeObjectAmountDetails : List of all unit amount details for calculating the fee.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeeObjectAmountDetails {
    /// Graduated ranges, used for a `graduated` charge model.
    #[serde(rename = "graduated_ranges", skip_serializing_if = "Option::is_none")]
    pub graduated_ranges: Option<Vec<models::FeeObjectAmountDetailsGraduatedRangesInner>>,
    /// Graduated percentage ranges, used for a `graduated_percentage` charge model.
    #[serde(rename = "graduated_percentage_ranges", skip_serializing_if = "Option::is_none")]
    pub graduated_percentage_ranges: Option<Vec<models::FeeObjectAmountDetailsGraduatedPercentageRangesInner>>,
    /// The quantity of units that are provided free of charge for each billing period in a `package` charge model.
    #[serde(rename = "free_units", skip_serializing_if = "Option::is_none")]
    pub free_units: Option<String>,
    /// The quantity of units that are not provided free of charge for each billing period in a `package` charge model.
    #[serde(rename = "paid_units", skip_serializing_if = "Option::is_none")]
    pub paid_units: Option<String>,
    /// The quantity of units included, defined for Package or Percentage charge model.
    #[serde(rename = "per_package_size", skip_serializing_if = "Option::is_none")]
    pub per_package_size: Option<i32>,
    /// Total amount to charge for received paid_units, defined for Package or Percentage charge model.
    #[serde(rename = "per_package_unit_amount", skip_serializing_if = "Option::is_none")]
    pub per_package_unit_amount: Option<String>,
    /// The total units received in Lago for the Percentage charge model.
    #[serde(rename = "units", skip_serializing_if = "Option::is_none")]
    pub units: Option<String>,
    /// Total number of free events allowed for the Percentage charge model.
    #[serde(rename = "free_events", skip_serializing_if = "Option::is_none")]
    pub free_events: Option<i32>,
    /// Percentage rate applied for the Percentage charge model.
    #[serde(rename = "rate", skip_serializing_if = "Option::is_none")]
    pub rate: Option<String>,
    /// Total amount of received units to be charged for the Percentage charge model.
    #[serde(rename = "per_unit_total_amount", skip_serializing_if = "Option::is_none")]
    pub per_unit_total_amount: Option<String>,
    /// Total number of paid events for the Percentage charge model.
    #[serde(rename = "paid_events", skip_serializing_if = "Option::is_none")]
    pub paid_events: Option<i32>,
    /// Fixed fee unit price per received paid_event for the Percentage charge model.
    #[serde(rename = "fixed_fee_unit_amount", skip_serializing_if = "Option::is_none")]
    pub fixed_fee_unit_amount: Option<String>,
    /// Total amount to charge for received paid_events for the Percentage charge model.
    #[serde(rename = "fixed_fee_total_amount", skip_serializing_if = "Option::is_none")]
    pub fixed_fee_total_amount: Option<String>,
    /// Total adjustment amount linked to minimum and maximum spending per transaction for the Percentage charge model.
    #[serde(rename = "min_max_adjustment_total_amount", skip_serializing_if = "Option::is_none")]
    pub min_max_adjustment_total_amount: Option<String>,
    /// Volume ranges, used for a `volume` charge model.
    #[serde(rename = "volume_ranges", skip_serializing_if = "Option::is_none")]
    pub volume_ranges: Option<Vec<models::FeeObjectAmountDetailsVolumeRangesInner>>,
}

impl FeeObjectAmountDetails {
    /// List of all unit amount details for calculating the fee.
    pub fn new() -> FeeObjectAmountDetails {
        FeeObjectAmountDetails {
            graduated_ranges: None,
            graduated_percentage_ranges: None,
            free_units: None,
            paid_units: None,
            per_package_size: None,
            per_package_unit_amount: None,
            units: None,
            free_events: None,
            rate: None,
            per_unit_total_amount: None,
            paid_events: None,
            fixed_fee_unit_amount: None,
            fixed_fee_total_amount: None,
            min_max_adjustment_total_amount: None,
            volume_ranges: None,
        }
    }
}

