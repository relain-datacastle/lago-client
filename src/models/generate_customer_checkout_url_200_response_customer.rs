/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GenerateCustomerCheckoutUrl200ResponseCustomer {
    /// Unique identifier assigned to the customer within the Lago application. This ID is exclusively created by Lago and serves as a unique identifier for the customer's record within the Lago system
    #[serde(rename = "lago_customer_id", skip_serializing_if = "Option::is_none")]
    pub lago_customer_id: Option<String>,
    /// The customer external unique identifier (provided by your own application)
    #[serde(rename = "external_customer_id", skip_serializing_if = "Option::is_none")]
    pub external_customer_id: Option<String>,
    /// The Payment Provider name linked to the Customer.
    #[serde(rename = "payment_provider", skip_serializing_if = "Option::is_none")]
    pub payment_provider: Option<String>,
    /// The new generated Payment Provider Checkout URL for the Customer.
    #[serde(rename = "checkout_url", skip_serializing_if = "Option::is_none")]
    pub checkout_url: Option<String>,
}

impl GenerateCustomerCheckoutUrl200ResponseCustomer {
    pub fn new() -> GenerateCustomerCheckoutUrl200ResponseCustomer {
        GenerateCustomerCheckoutUrl200ResponseCustomer {
            lago_customer_id: None,
            external_customer_id: None,
            payment_provider: None,
            checkout_url: None,
        }
    }
}

