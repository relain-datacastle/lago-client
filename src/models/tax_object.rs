/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TaxObject {
    /// Unique identifier of the tax, created by Lago.
    #[serde(rename = "lago_id")]
    pub lago_id: uuid::Uuid,
    /// Name of the tax.
    #[serde(rename = "name")]
    pub name: String,
    /// Unique code used to identify the tax associated with the API request.
    #[serde(rename = "code")]
    pub code: String,
    /// Internal description of the taxe
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// The percentage rate of the tax
    #[serde(rename = "rate")]
    pub rate: f64,
    /// Set to `true` if the tax is used as one of the organization's default
    #[serde(rename = "applied_to_organization")]
    pub applied_to_organization: bool,
    /// Creation date of the tax.
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl TaxObject {
    pub fn new(lago_id: uuid::Uuid, name: String, code: String, rate: f64, applied_to_organization: bool, created_at: String) -> TaxObject {
        TaxObject {
            lago_id,
            name,
            code,
            description: None,
            rate,
            applied_to_organization,
            created_at,
        }
    }
}

