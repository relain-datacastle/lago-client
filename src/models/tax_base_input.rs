/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TaxBaseInput {
    /// Name of the tax.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Unique code used to identify the tax associated with the API request.
    #[serde(rename = "code", skip_serializing_if = "Option::is_none")]
    pub code: Option<String>,
    /// The percentage rate of the tax
    #[serde(rename = "rate", skip_serializing_if = "Option::is_none")]
    pub rate: Option<String>,
    /// Internal description of the taxe
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Set to `true` if the tax is used as one of the organization's default
    #[serde(rename = "applied_to_organization", skip_serializing_if = "Option::is_none")]
    pub applied_to_organization: Option<bool>,
}

impl TaxBaseInput {
    pub fn new() -> TaxBaseInput {
        TaxBaseInput {
            name: None,
            code: None,
            rate: None,
            description: None,
            applied_to_organization: None,
        }
    }
}

