/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeeUpdateInputFee {
    /// The payment status of the fee. Possible values are `pending`, `succeeded`, `failed` or `refunded`.
    #[serde(rename = "payment_status")]
    pub payment_status: PaymentStatus,
}

impl FeeUpdateInputFee {
    pub fn new(payment_status: PaymentStatus) -> FeeUpdateInputFee {
        FeeUpdateInputFee {
            payment_status,
        }
    }
}
/// The payment status of the fee. Possible values are `pending`, `succeeded`, `failed` or `refunded`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PaymentStatus {
    #[serde(rename = "pending")]
    Pending,
    #[serde(rename = "succeeded")]
    Succeeded,
    #[serde(rename = "failed")]
    Failed,
    #[serde(rename = "refunded")]
    Refunded,
}

impl Default for PaymentStatus {
    fn default() -> PaymentStatus {
        Self::Pending
    }
}

