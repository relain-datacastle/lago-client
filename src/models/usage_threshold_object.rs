/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UsageThresholdObject {
    /// Unique identifier of the usage threshold created by Lago.
    #[serde(rename = "lago_id")]
    pub lago_id: uuid::Uuid,
    /// The display name of the usage threshold.
    #[serde(rename = "threshold_display_name", skip_serializing_if = "Option::is_none")]
    pub threshold_display_name: Option<String>,
    /// The amount to reach to trigger a `progressive_billing` invoice.
    #[serde(rename = "amount_cents")]
    pub amount_cents: i32,
    /// This field when set to `true` indicates that a `progressive_billing` invoice will be created every time the lifetime usage increases by the specified amount.
    #[serde(rename = "recurring")]
    pub recurring: bool,
    /// The date and time when the usage threshold was created. It is expressed in UTC format according to the ISO 8601 datetime standard.
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// The date and time when the usage threshold was last updated. It is expressed in UTC format according to the ISO 8601 datetime standard.
    #[serde(rename = "updated_at")]
    pub updated_at: String,
}

impl UsageThresholdObject {
    pub fn new(lago_id: uuid::Uuid, amount_cents: i32, recurring: bool, created_at: String, updated_at: String) -> UsageThresholdObject {
        UsageThresholdObject {
            lago_id,
            threshold_display_name: None,
            amount_cents,
            recurring,
            created_at,
            updated_at,
        }
    }
}

