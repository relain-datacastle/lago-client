/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InvoiceOneOffCreateInputInvoiceFeesInner {
    /// The code of the add-on used as invoice item.
    #[serde(rename = "add_on_code")]
    pub add_on_code: String,
    /// Specifies the name that will be displayed on an invoice. If no value is set for this field, the name of the actual charge will be used as the default display name.
    #[serde(rename = "invoice_display_name", skip_serializing_if = "Option::is_none")]
    pub invoice_display_name: Option<String>,
    /// The amount of the fee per unit, expressed in cents. By default, the amount of the add-on is used.
    #[serde(rename = "unit_amount_cents", skip_serializing_if = "Option::is_none")]
    pub unit_amount_cents: Option<i32>,
    /// The quantity of units associated with the fee. By default, only 1 unit is added to the invoice.
    #[serde(rename = "units", skip_serializing_if = "Option::is_none")]
    pub units: Option<String>,
    /// This is a description
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// List of unique code used to identify the taxes.
    #[serde(rename = "tax_codes", skip_serializing_if = "Option::is_none")]
    pub tax_codes: Option<Vec<String>>,
}

impl InvoiceOneOffCreateInputInvoiceFeesInner {
    pub fn new(add_on_code: String) -> InvoiceOneOffCreateInputInvoiceFeesInner {
        InvoiceOneOffCreateInputInvoiceFeesInner {
            add_on_code,
            invoice_display_name: None,
            unit_amount_cents: None,
            units: None,
            description: None,
            tax_codes: None,
        }
    }
}

