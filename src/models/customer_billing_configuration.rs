/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CustomerBillingConfiguration : Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CustomerBillingConfiguration {
    /// The grace period, expressed in days, for the invoice. This period refers to the additional time granted to the customer beyond the invoice due date to adjust usage and line items
    #[serde(rename = "invoice_grace_period", skip_serializing_if = "Option::is_none")]
    pub invoice_grace_period: Option<i32>,
    /// The payment provider utilized to initiate payments for invoices issued by Lago. Accepted values: `stripe`, `adyen`, `gocardless` or null. This field is required if you intend to assign a `provider_customer_id`.
    #[serde(rename = "payment_provider", skip_serializing_if = "Option::is_none")]
    pub payment_provider: Option<PaymentProvider>,
    /// Unique code used to identify a payment provider connection.
    #[serde(rename = "payment_provider_code", skip_serializing_if = "Option::is_none")]
    pub payment_provider_code: Option<String>,
    /// The customer ID within the payment provider's system. If this field is not provided, Lago has the option to create a new customer record within the payment provider's system on behalf of the customer
    #[serde(rename = "provider_customer_id", skip_serializing_if = "Option::is_none")]
    pub provider_customer_id: Option<String>,
    /// Set this field to `true` if you want to create the customer in the payment provider synchronously with the customer creation process in Lago. This option is applicable only when the `provider_customer_id` is `null` and the customer is automatically created in the payment provider through Lago. By default, the value is set to `false`
    #[serde(rename = "sync", skip_serializing_if = "Option::is_none")]
    pub sync: Option<bool>,
    /// Set this field to `true` if you want to create a customer record in the payment provider's system. This option is applicable only when the `provider_customer_id` is null and the `sync_with_provider` field is set to `true`. By default, the value is set to `false`
    #[serde(rename = "sync_with_provider", skip_serializing_if = "Option::is_none")]
    pub sync_with_provider: Option<bool>,
    /// The document locale, specified in the ISO 639-1 format. This field represents the language or locale used for the documents issued by Lago
    #[serde(rename = "document_locale", skip_serializing_if = "Option::is_none")]
    pub document_locale: Option<String>,
    /// Specifies the available payment methods that can be used for this customer when `payment_provider` is set to `stripe`. The `provider_payment_methods` field is an array that allows multiple payment options to be defined. If this field is not explicitly set, the payment methods will be set to `card`. For now, possible values are `card`, `sepa_debit`, `us_bank_account`, `bacs_debit` and `link`. Note that when `link` is selected, `card` should also be provided in the array.
    #[serde(rename = "provider_payment_methods", skip_serializing_if = "Option::is_none")]
    pub provider_payment_methods: Option<Vec<String>>,
}

impl CustomerBillingConfiguration {
    /// Configuration specific to the payment provider, utilized for billing the customer. This object contains settings and parameters necessary for processing payments and invoicing the customer.
    pub fn new() -> CustomerBillingConfiguration {
        CustomerBillingConfiguration {
            invoice_grace_period: None,
            payment_provider: None,
            payment_provider_code: None,
            provider_customer_id: None,
            sync: None,
            sync_with_provider: None,
            document_locale: None,
            provider_payment_methods: None,
        }
    }
}
/// The payment provider utilized to initiate payments for invoices issued by Lago. Accepted values: `stripe`, `adyen`, `gocardless` or null. This field is required if you intend to assign a `provider_customer_id`.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PaymentProvider {
    #[serde(rename = "stripe")]
    Stripe,
    #[serde(rename = "adyen")]
    Adyen,
    #[serde(rename = "gocardless")]
    Gocardless,
}

impl Default for PaymentProvider {
    fn default() -> PaymentProvider {
        Self::Stripe
    }
}

