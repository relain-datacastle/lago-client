/*
 * Lago API documentation
 *
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 1.17.1
 * Contact: tech@getlago.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CustomerChargeGroupedUsageObjectInner {
    /// The amount in cents, tax excluded, consumed for a specific group related to a charge item.
    #[serde(rename = "amount_cents", skip_serializing_if = "Option::is_none")]
    pub amount_cents: Option<i32>,
    /// The quantity of usage events that have been recorded for a particular charge during the specified time period. These events may also be referred to as the number of transactions in some contexts.
    #[serde(rename = "events_count", skip_serializing_if = "Option::is_none")]
    pub events_count: Option<i32>,
    /// The number of units consumed for a specific group related to a charge item.
    #[serde(rename = "units", skip_serializing_if = "Option::is_none")]
    pub units: Option<String>,
    /// Key value list of event properties aggregated by the charge model
    #[serde(rename = "grouped_by", skip_serializing_if = "Option::is_none")]
    pub grouped_by: Option<std::collections::HashMap<String, String>>,
    /// Array of filter object, representing multiple dimensions for a charge item.
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<models::CustomerChargeFiltersUsageObjectInner>>,
}

impl CustomerChargeGroupedUsageObjectInner {
    pub fn new() -> CustomerChargeGroupedUsageObjectInner {
        CustomerChargeGroupedUsageObjectInner {
            amount_cents: None,
            events_count: None,
            units: None,
            grouped_by: None,
            filters: None,
        }
    }
}

